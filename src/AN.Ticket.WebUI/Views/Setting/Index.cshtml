@model AN.Ticket.WebUI.ViewModels.Setting.SettingViewModel

@{
    ViewData["Title"] = "Configurações";
}

<style>
    .nav-tabs .nav-link.active {
        background-color: #f8f9fa;
        border-color: #dee2e6 #dee2e6 #fff;
        font-weight: bold;
    }

    .btn-dark {
        background-color: #000;
        color: #fff;
    }

    .profile-container {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .profile-picture {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: #6c757d;
    }

    .profile-not-picture {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.0rem;
        color: #6c757d;
    }

    .team-section {
        margin-top: 2rem;
    }

    .team-card {
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 8px;
        text-align: start;
    }

    .team-role {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .save-button {
        background-color: #000;
        color: #fff;
        width: 100%;
    }
</style>

<div class="container mt-5">
    <h1 class="mb-3">Configurações do Sistema</h1>
    <p class="text-muted">Gerencie os membros da equipe e as permissões de conta aqui.</p>

    <ul class="nav nav-tabs mb-4" role="tablist">
        <li class="nav-item">
            <a class="nav-link" id="profile-tab" data-bs-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="true">Perfil</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="password-tab" data-bs-toggle="tab" href="#password" role="tab" aria-controls="password" aria-selected="false">Segurança</a>
        </li>
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link" id="team-tab" data-bs-toggle="tab" href="#team" role="tab" aria-controls="team" aria-selected="false">Equipe</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="plan-tab" data-bs-toggle="tab" href="#plan" role="tab" aria-controls="plan" aria-selected="false">Plano</a>
            </li>
            @*         <li class="nav-item">
        <a class="nav-link" id="billing-tab" data-bs-toggle="tab" href="#billing" role="tab" aria-controls="billing" aria-selected="false">Faturamento</a>
        </li>
        <li class="nav-item">
        <a class="nav-link" id="notifications-tab" data-bs-toggle="tab" href="#notifications" role="tab" aria-controls="notifications" aria-selected="false">Notificações</a>
        </li>
        <li class="nav-item">
        <a class="nav-link" id="integrations-tab" data-bs-toggle="tab" href="#integrations" role="tab" aria-controls="integrations" aria-selected="false">Integrações</a>
        </li> *@
            <li class="nav-item">
                <a class="nav-link" id="api-tab" data-bs-toggle="tab" href="#api" role="tab" aria-controls="api" aria-selected="false">API</a>
            </li>
        }
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
            @await Component.InvokeAsync("ProfileSettings")
        </div>
        <div class="tab-pane fade" id="password" role="tabpanel" aria-labelledby="password-tab">
            @await Html.PartialAsync("~/Views/Shared/Partials/Account/_SecuritySettings.cshtml", Model.SecuritySetting)
        </div>
        @if (User.IsInRole("Admin"))
        {
            <div class="tab-pane fade" id="team" role="tabpanel" aria-labelledby="team-tab">
                @await Component.InvokeAsync("Team")
            </div>
            <div class="tab-pane fade" id="plan" role="tabpanel" aria-labelledby="plan-tab">
                @await Component.InvokeAsync("PaymantPlan")
            </div>
            @*         <div class="tab-pane fade" id="billing" role="tabpanel" aria-labelledby="billing-tab">
        <p>Configurações de Faturamento</p>
        </div>
        <div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
        <p>Configurações de Notificações</p>
        </div>
        <div class="tab-pane fade" id="integrations" role="tabpanel" aria-labelledby="integrations-tab">
        <p>Configurações de Integrações</p>
        </div> *@
            <div class="tab-pane fade" id="api" role="tabpanel" aria-labelledby="api-tab">
                @await Component.InvokeAsync("ApiKey")
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#profile-picture-div').click(function () {
                $('#profile-picture-input').click();
            });

            $('#profile-picture-input').change(function () {
                $('#profile-picture-form').submit();
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const successRedirect = @Html.Raw(TempData.ContainsKey("SuccessRedirect") ? "true" : "false");

            if (!successRedirect) {
                localStorage.removeItem('activeTab');
            }

            const activeTab = localStorage.getItem('activeTab') || '#profile';

            document.querySelectorAll('.nav-tabs .nav-link').forEach(tab => {
                tab.classList.remove('active');
            });
            document.querySelectorAll('.tab-content .tab-pane').forEach(pane => {
                pane.classList.remove('show', 'active');
            });

            const tabLink = document.querySelector(`a[href="${activeTab}"]`);
            const tabPane = document.querySelector(activeTab);

            if (tabLink && tabPane) {
                tabLink.classList.add('active');
                tabPane.classList.add('show', 'active');
            }

            document.querySelectorAll('.nav-tabs .nav-link').forEach(tab => {
                tab.addEventListener('click', function () {
                    const tabId = this.getAttribute('href');
                    localStorage.setItem('activeTab', tabId);
                });
            });
        });
    </script>

    <script src="~/js/team.js"></script>
}