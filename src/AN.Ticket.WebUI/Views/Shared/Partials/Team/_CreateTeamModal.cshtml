@model AN.Ticket.WebUI.ViewModels.Team.TeamCreationViewModel

<div class="modal fade" id="createTeamModal" tabindex="-1" aria-labelledby="createTeamModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createTeamModalLabel">Criar Novo Time</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                <form id="createTeamForm" method="post" action="/Team/Create">
                    <div class="mb-3">
                        <label for="teamName" class="form-label">Nome do Time</label>
                        <input type="text" class="form-control" id="teamName" name="TeamName" required>
                        <span asp-validation-for="TeamName" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <h6 class="fw-bold">Selecionar Membros</h6>
                        <p class="text-muted">Escolha os membros para adicionar ao time, usando o botão abaixo.</p>
                        <div class="d-flex justify-content-between align-items-center input-group mb-2">
                            <label class="form-label mb-0">Membros do Time</label>
                            <button type="button" class="btn btn-outline-primary dropdown-toggle ms-1" data-bs-toggle="dropdown" aria-expanded="false">
                                Selecionar Membros
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" id="availableMembersDropdown" style="width: 100%;">
                                @{
                                    var hasAvailableUsers = Model.AvailableUsers.Any();
                                    if (hasAvailableUsers)
                                    {
                                        foreach (var user in Model.AvailableUsers)
                                        {
                                            <li id="dropdown-item-@user.Id">
                                                <a class="dropdown-item d-flex align-items-center" href="javascript:void(0);" onclick="addUserToTeam('@user.Id', '@user.FullName')">
                                                    @if (!string.IsNullOrEmpty(user.ProfilePicture))
                                                    {
                                                        <img src="@user.ProfilePicture" alt="@user.FullName" class="rounded-circle me-2" style="width: 30px; height: 30px; object-fit: cover;">
                                                    }
                                                    else
                                                    {
                                                        <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center me-2" style="width: 30px; height: 30px;">
                                                            @user.FullName.Substring(0, 1).ToUpper()
                                                        </div>
                                                    }
                                                    <span>@user.FullName</span>
                                                </a>
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        <li class="dropdown-item text-muted">Nenhum membro disponível</li>
                                    }
                                }
                            </ul>
                        </div>

                        <div id="selectedMembers" class="d-flex flex-wrap gap-2 mb-3"></div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Criar Time</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    if (typeof selectedUserIds === 'undefined') {
        var selectedUserIds = new Set();
    }

    function initializeModal() {
        selectedUserIds.clear();
        const selectedMembersContainer = document.getElementById("selectedMembers");
        selectedMembersContainer.innerHTML = '';
        document.getElementById("teamName").value = '';

        document.querySelectorAll("#availableMembersDropdown li").forEach(item => {
            item.style.display = 'block';
        });
    }

    document.getElementById('createTeamModal').addEventListener('show.bs.modal', initializeModal);

    function addUserToTeam(userId, userName) {
        const selectedMembersContainer = document.getElementById("selectedMembers");
        const dropdownItem = document.getElementById(`dropdown-item-${userId}`);

        if (!selectedUserIds.has(userId) && selectedMembersContainer) {
            selectedUserIds.add(userId);

            const memberTag = document.createElement("div");
            memberTag.className = "badge bg-light text-dark d-flex align-items-center";
            memberTag.style.borderRadius = "20px";
            memberTag.style.padding = "5px 10px";
            memberTag.id = `selected-${userId}`;
            memberTag.innerHTML = `${userName} <span class="ms-2" style="cursor:pointer;" onclick="removeUserFromTeam('${userId}')">&times;</span>`;

            const hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "SelectedUserIds";
            hiddenInput.value = userId;
            hiddenInput.id = `input-${userId}`;

            selectedMembersContainer.appendChild(memberTag);
            selectedMembersContainer.appendChild(hiddenInput);

            if (dropdownItem) {
                dropdownItem.style.display = 'none';
            }
        }
    }

    function removeUserFromTeam(userId) {
        selectedUserIds.delete(userId);
        document.getElementById(`input-${userId}`).remove();
        document.getElementById(`selected-${userId}`).remove();

        const dropdownItem = document.getElementById(`dropdown-item-${userId}`);
        if (dropdownItem) {
            dropdownItem.style.display = 'block';
        }
    }
</script>
