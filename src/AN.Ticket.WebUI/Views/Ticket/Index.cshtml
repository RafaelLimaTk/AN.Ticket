@using AN.Ticket.Domain.Enums
@model IEnumerable<AN.Ticket.Domain.Entities.Ticket>

@{
    ViewBag.Title = "Tickets";
    var statuses = Enum.GetValues(typeof(TicketStatus)).Cast<TicketStatus>();
    var ticketsGroupedByStatus = Model.GroupBy(t => t.Status).ToDictionary(g => g.Key, g => g.ToList());
}

<style>
    .container {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        padding: 0 10px; /* Ajuste de margem para ocupar mais espaço */
    }

    .col {
        flex: 1;
        padding: 20px;
        margin: 0 5px; /* Remover bordas de coluna e ajustar margem */
        background-color: #f8f9fa; /* Adicionando uma cor de fundo sutil */
        border-radius: 8px;
    }

    .ticket-card {
        background-color: #fff;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
    }

    .ticket-card h4 {
        margin: 0;
        font-size: 18px;
    }

    .ticket-card p {
        margin: 5px 0;
        font-size: 14px;
    }

    .ticket-card span {
        display: inline-block;
        padding: 5px 10px;
        background-color: #f0f0f0;
        border-radius: 4px;
        font-size: 12px;
    }
</style>


<div class="container">
    <div class="row">
        @foreach (var status in statuses)
        {
            <div class="col">
                <h3>@TranslateStatus(status)</h3>
                @if (ticketsGroupedByStatus.ContainsKey(status))
                {
                    foreach (var ticket in ticketsGroupedByStatus[status])
                    {
                        <div class="ticket-card">
                            <h4>@ticket.Subject</h4>
                            <p>@ticket.ContactName - @ticket.AccountName</p>
                            <p>@ticket.Priority</p>
                            <p>@ticket.DueDate.ToShortDateString()</p>
                            <span>@TranslateStatus(ticket.Status)</span>
                        </div>
                    }
                }
                else
                {
                    <p>Nenhum ticket neste status</p>
                }
            </div>
        }
    </div>
</div>

@functions {
    public string TranslateStatus(TicketStatus status)
    {
        return status switch
        {
            TicketStatus.Onhold => "Em Espera",
            TicketStatus.Open => "Aberto",
            TicketStatus.InProgress => "Em Progresso",
            TicketStatus.Closed => "Fechado",
            _ => status.ToString(),
        };
    }
}


